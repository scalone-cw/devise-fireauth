.authform
  = form_for(resource, as: resource_name, url: session_path(resource_name), html: { role: 'form'}) do |f|
    = devise_error_messages!
    %h3 Sign in
    = f.hidden_field :id_token
    #firebaseui-auth-container
    - if devise_mapping.rememberable?
      .checkbox{style: "width:150px"}
        %label
          = f.check_box :remember_me
          Remember me


:javascript
  $(function _load () {
    // FirebaseUI config.
    var uiConfig = {
      // signInSuccessUrl: '/',
      signInOptions: [
        // Leave the lines as is for the providers you want to offer your users.
        firebase.auth.GoogleAuthProvider.PROVIDER_ID,
      ],
      // tosUrl and privacyPolicyUrl accept either url string or a callback
      // function.
      // Terms of service url/callback.
      tosUrl: '#',
      // Privacy policy url/callback.
      privacyPolicyUrl: function() {
        window.location.assign('#');
      },
      callbacks: {
        signInSuccessWithAuthResult: function (authResult, _redirectUrl) {
          $('input[name="user[id_token]"').val(authResult.user.qa)
          setTimeout(function () {
            $("form#new_user").submit();
          }, 500)
          return
        }
      }
    };

    // Initialize the FirebaseUI Widget using Firebase.
    var ui = new firebaseui.auth.AuthUI(firebase.auth());
    // The start method will wait until the DOM is loaded.
    ui.start('#firebaseui-auth-container', uiConfig);
  })
